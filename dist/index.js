import{GroupUpdatedCodec as e,ContentTypeGroupUpdated as t}from"@xmtp/content-type-group-updated";import{ContentTypeText as s,TextCodec as i}from"@xmtp/content-type-text";import{ContentTypeId as n,EncodedContent as r,ListMessagesOptions as a,ListConversationsOptions as o,PermissionPolicySet as c,CreateGroupOptions as d,CreateDMOptions as l,Consent as u,GroupMember as g,MessageDisappearingSettings as h,GroupPermissionsOptions as p,GroupMessageKind as m,DeliveryStatus as y,ConversationType as I}from"@xmtp/wasm-bindings";export{Consent,ConsentEntityType,ConsentState,ContentType,ContentTypeId,ConversationListItem,ConversationType,CreateDMOptions,CreateGroupOptions,DeliveryStatus,EncodedContent,GroupMember,GroupMembershipState,GroupMessageKind,GroupMetadata,GroupPermissions,GroupPermissionsOptions,HmacKey,InboxState,Installation,ListConversationsOptions,ListMessagesOptions,LogOptions,Message,MessageDisappearingSettings,MetadataField,PermissionLevel,PermissionPolicy,PermissionPolicySet,PermissionUpdateType,SignatureRequestHandle,SortDirection}from"@xmtp/wasm-bindings";import{v4 as v}from"uuid";import{ContentTypeId as w}from"@xmtp/content-type-primitives";const f=e=>{console.error(e.message)};class M{#e;#t;#s=new Map;constructor(e,t){this.#e=e,this.#e.addEventListener("message",this.handleMessage),t&&this.#e.addEventListener("error",f),this.#t=t}sendMessage(e,t){const s=v();this.#e.postMessage({action:e,id:s,data:t});return new Promise((e,t)=>{this.#s.set(s,{resolve:e,reject:t})})}handleMessage=e=>{const t=e.data;this.#t&&console.log("client received event data",t);const s=this.#s.get(t.id);s&&(this.#s.delete(t.id),"error"in t?s.reject(t.error):s.resolve(t.result))};handleStreamMessage=(e,t,s)=>{const i=i=>{const n=i.data;if(n.streamId===e){if("stream.fail"===n.action)return void s?.onFail?.();"error"in n?t(n.error,void 0):t(null,n.result)}};return this.#e.addEventListener("message",i),async()=>{await this.sendMessage("endStream",{streamId:e}),this.#e.removeEventListener("message",i)}};close(){this.#e.removeEventListener("message",this.handleMessage),this.#t&&this.#e.removeEventListener("error",f),this.#e.terminate()}}const b=e=>new w({authorityId:e.authorityId,typeId:e.typeId,versionMajor:e.versionMajor,versionMinor:e.versionMinor}),S=e=>new n(e.authorityId,e.typeId,e.versionMajor,e.versionMinor),x=e=>({authorityId:e.authorityId,typeId:e.typeId,versionMajor:e.versionMajor,versionMinor:e.versionMinor}),A=e=>new w({authorityId:e.authorityId,typeId:e.typeId,versionMajor:e.versionMajor,versionMinor:e.versionMinor}),k=e=>({type:b(e.type),parameters:Object.fromEntries(e.parameters),fallback:e.fallback,compression:e.compression,content:e.content}),D=e=>new r(S(e.type),new Map(Object.entries(e.parameters)),e.fallback,e.compression,e.content),P=e=>({type:x(e.type),parameters:e.parameters,fallback:e.fallback,compression:e.compression,content:e.content}),T=e=>({type:A(e.type),parameters:e.parameters,fallback:e.fallback,compression:e.compression,content:e.content}),C=e=>({content:P(k(e.content)),convoId:e.convoId,deliveryStatus:e.deliveryStatus,id:e.id,kind:e.kind,senderInboxId:e.senderInboxId,sentAtNs:e.sentAtNs}),R=e=>({contentTypes:e.contentTypes,deliveryStatus:e.deliveryStatus,direction:e.direction,limit:e.limit,sentAfterNs:e.sentAfterNs,sentBeforeNs:e.sentBeforeNs}),N=e=>new a(e.sentBeforeNs,e.sentAfterNs,e.limit,e.deliveryStatus,e.direction,e.contentTypes),L=e=>({consentStates:e.consentStates,conversationType:e.conversationType,createdAfterNs:e.createdAfterNs,createdBeforeNs:e.createdBeforeNs,includeDuplicateDms:e.includeDuplicateDms,limit:e.limit}),q=e=>new o(e.consentStates,e.conversationType,e.createdAfterNs,e.createdBeforeNs,e.includeDuplicateDms??!1,e.limit),_=e=>({addAdminPolicy:e.addAdminPolicy,addMemberPolicy:e.addMemberPolicy,removeAdminPolicy:e.removeAdminPolicy,removeMemberPolicy:e.removeMemberPolicy,updateGroupDescriptionPolicy:e.updateGroupDescriptionPolicy,updateGroupImageUrlSquarePolicy:e.updateGroupImageUrlSquarePolicy,updateGroupNamePolicy:e.updateGroupNamePolicy,updateMessageDisappearingPolicy:e.updateMessageDisappearingPolicy}),F=e=>new c(e.addMemberPolicy,e.removeMemberPolicy,e.addAdminPolicy,e.removeAdminPolicy,e.updateGroupNamePolicy,e.updateGroupDescriptionPolicy,e.updateGroupImageUrlSquarePolicy,e.updateMessageDisappearingPolicy),G=e=>({customPermissionPolicySet:e.customPermissionPolicySet,description:e.groupDescription,imageUrlSquare:e.groupImageUrlSquare,messageDisappearingSettings:e.messageDisappearingSettings?J(e.messageDisappearingSettings):void 0,name:e.groupName,permissions:e.permissions}),B=e=>new d(e.permissions,e.name,e.imageUrlSquare,e.description,e.customPermissionPolicySet&&e.permissions===p.CustomPolicy?F(e.customPermissionPolicySet):void 0,e.messageDisappearingSettings?Q(e.messageDisappearingSettings):void 0),E=e=>({messageDisappearingSettings:e.messageDisappearingSettings?J(e.messageDisappearingSettings):void 0}),U=e=>new l(e.messageDisappearingSettings?Q(e.messageDisappearingSettings):void 0),O=async e=>{const t=e.id,s=e.name,i=e.imageUrl,n=e.description,r=e.permissions,a=e.isActive,o=e.addedByInboxId,c=await e.metadata(),d=e.admins,l=e.superAdmins,u=e.createdAtNs,g=r.policyType,h=r.policySet,p=e.isCommitLogForked;return{id:t,name:s,imageUrl:i,description:n,permissions:{policyType:g,policySet:{addAdminPolicy:h.addAdminPolicy,addMemberPolicy:h.addMemberPolicy,removeAdminPolicy:h.removeAdminPolicy,removeMemberPolicy:h.removeMemberPolicy,updateGroupDescriptionPolicy:h.updateGroupDescriptionPolicy,updateGroupImageUrlSquarePolicy:h.updateGroupImageUrlSquarePolicy,updateGroupNamePolicy:h.updateGroupNamePolicy,updateMessageDisappearingPolicy:h.updateMessageDisappearingPolicy}},isActive:a,addedByInboxId:o,metadata:c,admins:d,superAdmins:l,createdAtNs:u,isCommitLogForked:p}},K=e=>({bytes:e.bytes,clientTimestampNs:e.clientTimestampNs,id:e.id}),W=e=>({identifiers:e.accountIdentifiers,inboxId:e.inboxId,installations:e.installations.map(K),recoveryIdentifier:e.recoveryIdentifier}),j=e=>({entity:e.entity,entityType:e.entityType,state:e.state}),$=e=>new u(e.entityType,e.state,e.entity),H=e=>({accountIdentifiers:e.accountIdentifiers,consentState:e.consentState,inboxId:e.inboxId,installationIds:e.installationIds,permissionLevel:e.permissionLevel}),V=e=>new g(e.inboxId,e.accountIdentifiers,e.installationIds,e.permissionLevel,e.consentState),z=e=>({key:e.key,epoch:e.epoch}),J=e=>({fromNs:e.fromNs,inNs:e.inNs}),Q=e=>new h(e.fromNs,e.inNs),X=e=>({lifetime:e.lifetime?{notBefore:e.lifetime.not_before,notAfter:e.lifetime.not_after}:void 0,validationError:e.validationError}),Y=e=>({epoch:e.epoch,maybeForked:e.maybeForked,forkDetails:e.forkDetails,isCommitLogForked:e.isCommitLogForked,localCommitLog:e.localCommitLog,remoteCommitLog:e.remoteCommitLog,cursor:e.cursor}),Z=e=>({uploadKeyPackage:e.upload_key_package,fetchKeyPackage:e.fetch_key_package,sendGroupMessages:e.send_group_messages,sendWelcomeMessages:e.send_welcome_messages,queryGroupMessages:e.query_group_messages,queryWelcomeMessages:e.query_welcome_messages,subscribeMessages:e.subscribe_messages,subscribeWelcomes:e.subscribe_welcomes}),ee=e=>({getIdentityUpdatesV2:e.get_identity_updates_v2,getInboxIds:e.get_inbox_ids,publishIdentityUpdate:e.publish_identity_update,verifySmartContractWalletSignature:e.verify_smart_contract_wallet_signature});class te{#i;content;contentType;conversationId;deliveryStatus;fallback;compression;id;kind;parameters;encodedContent;senderInboxId;sentAtNs;constructor(e,t){switch(this.#i=e,this.id=t.id,this.sentAtNs=t.sentAtNs,this.conversationId=t.convoId,this.senderInboxId=t.senderInboxId,this.encodedContent=t.content,t.kind){case m.Application:this.kind="application";break;case m.MembershipChange:this.kind="membership_change"}switch(t.deliveryStatus){case y.Unpublished:this.deliveryStatus="unpublished";break;case y.Published:this.deliveryStatus="published";break;case y.Failed:this.deliveryStatus="failed"}this.contentType=A(t.content.type),this.parameters=new Map(Object.entries(t.content.parameters)),this.fallback=t.content.fallback,this.compression=t.content.compression;try{this.content=this.#i.decodeContent(t,this.contentType)}catch{this.content=void 0}}}class se extends Error{constructor(){super("Client not initialized, use Client.create or Client.build to create a client")}}class ie extends Error{constructor(){super("Signer unavailable, use Client.create to create a client with a signer")}}class ne extends Error{constructor(e){super(`Codec not found for "${e.toString()}" content type`)}}class re extends Error{constructor(){super("Unable to create add account signature text, `allowInboxReassign` must be true")}}class ae extends Error{constructor(e){super(`Account already associated with inbox ${e}`)}}class oe extends Error{constructor(e){super(`Group "${e}" not found`)}}class ce extends Error{constructor(e){super(`Stream "${e}" not found`)}}class de extends Error{constructor(e){super(`Invalid group membership change for message ${e}`)}}class le extends Error{constructor(){super("Content type is required when sending content other than text")}}class ue extends Error{constructor(e){super(`Stream failed, retried ${e} ${"time"+(1!==e?"s":"")}`)}}class ge extends Error{constructor(){super("Stream retry attempts must be greater than 0")}}class he{isDone=!1;#n=[];#r;onDone;onReturn;constructor(){this.#r=[],this.isDone=!1}flush(){for(;this.#n.length>0;){const e=this.#n.shift();e&&e({done:!0,value:void 0})}}done(){this.flush(),this.#r=[],this.#n=[],this.isDone=!0,this.onDone?.()}push=e=>{if(this.isDone)return;const t=this.#n.shift();t?t({done:!1,value:e}):this.#r.push(e)};next=()=>this.isDone?Promise.resolve({done:!0,value:void 0}):this.#r.length>0?Promise.resolve({done:!1,value:this.#r.shift()}):new Promise(e=>{this.#n.push(e)});return=()=>(this.onReturn?.(),this.done(),Promise.resolve({done:!0,value:void 0}));end=()=>this.return();[Symbol.asyncIterator](){return this}}const pe=["end","isDone","next","return",Symbol.asyncIterator],me=e=>pe.includes(e);const ye=1e4,Ie=6,ve=async(e,t,s)=>{const{onEnd:i,onError:n,onFail:r,onRestart:a,onRetry:o,onValue:c,retryAttempts:d=Ie,retryDelay:l=ye,retryOnFail:u=!0}=s??{};if(u&&d<0)throw new ge;const g=new he,h=(e,s)=>{if(e)n?.(e);else if(void 0!==s)try{if(t){const e=t(s);(e=>!!e&&("object"==typeof e||"function"==typeof e)&&"then"in e&&"function"==typeof e.then)(e)?e.then(e=>{g.push(e),c?.(e)}).catch(e=>{n?.(e)}):(g.push(e),c?.(e))}else g.push(s),c?.(s)}catch(e){n?.(e)}},p=async(t=d)=>{try{if(0===t)throw g.end(),new ue(d);await(s=l,new Promise(e=>setTimeout(e,s))),o?.(d-t+1,d);const n=await e(h,()=>{r?.(),p()});g.onDone=()=>{n(),i?.()},a?.()}catch(e){n?.(e),p(t-1)}var s},m=()=>{if(!u)throw g.end(),new ue(0);p()};try{const t=await e(h,()=>{r?.(),m()});g.onDone=()=>{t(),i?.()}}catch(e){n?.(e),m()}return new Proxy(g,{get(e,t,s){if(me(t))return Reflect.get(e,t,s)},set:()=>!0,has:(e,t)=>me(t),ownKeys:()=>pe,getOwnPropertyDescriptor(e,t){if(me(t))return{enumerable:!0,configurable:!0,value:Reflect.get(e,t)}}})};class we{#a;#i;#o;#c;#d;#l;#u;constructor(e,t,s){this.#i=e,this.#c=t,this.#g(s)}#g(e){this.#d=e?.isActive,this.#a=e?.addedByInboxId,this.#l=e?.metadata,this.#o=e?.createdAtNs,this.#u=e?.isCommitLogForked}get id(){return this.#c}get isActive(){return this.#d}get isCommitLogForked(){return this.#u}get addedByInboxId(){return this.#a}get createdAtNs(){return this.#o}get createdAt(){return this.#o?(e=this.#o,new Date(Number(e/1000000n))):void 0;var e}get metadata(){return this.#l}async members(){return this.#i.sendMessage("conversation.members",{id:this.#c})}async sync(){const e=await this.#i.sendMessage("conversation.sync",{id:this.#c});return this.#g(e),e}async publishMessages(){return this.#i.sendMessage("conversation.publishMessages",{id:this.#c})}async sendOptimistic(e,t){if("string"!=typeof e&&!t)throw new le;const i="string"==typeof e?this.#i.encodeContent(e,t??s):this.#i.encodeContent(e,t);return this.#i.sendMessage("conversation.sendOptimistic",{id:this.#c,content:i})}async send(e,t){if("string"!=typeof e&&!t)throw new le;const i="string"==typeof e?this.#i.encodeContent(e,t??s):this.#i.encodeContent(e,t);return this.#i.sendMessage("conversation.send",{id:this.#c,content:i})}async messages(e){return(await this.#i.sendMessage("conversation.messages",{id:this.#c,options:e})).map(e=>new te(this.#i,e))}async consentState(){return this.#i.sendMessage("conversation.consentState",{id:this.#c})}async updateConsentState(e){return this.#i.sendMessage("conversation.updateConsentState",{id:this.#c,state:e})}async messageDisappearingSettings(){return this.#i.sendMessage("conversation.messageDisappearingSettings",{id:this.#c})}async updateMessageDisappearingSettings(e,t){return this.#i.sendMessage("conversation.updateMessageDisappearingSettings",{id:this.#c,fromNs:e,inNs:t})}async removeMessageDisappearingSettings(){return this.#i.sendMessage("conversation.removeMessageDisappearingSettings",{id:this.#c})}async isMessageDisappearingEnabled(){return this.#i.sendMessage("conversation.isMessageDisappearingEnabled",{id:this.#c})}async stream(e){return ve(async(t,s)=>{const i=v();return await this.sync(),await this.#i.sendMessage("conversation.stream",{groupId:this.#c,streamId:i}),this.#i.handleStreamMessage(i,t,{...e,onFail:s})},e=>new te(this.#i,e),e)}async pausedForVersion(){return this.#i.sendMessage("conversation.pausedForVersion",{id:this.#c})}async getHmacKeys(){return this.#i.sendMessage("conversation.getHmacKeys",{id:this.#c})}async debugInfo(){return this.#i.sendMessage("conversation.debugInfo",{id:this.#c})}}class fe extends we{#i;#c;constructor(e,t,s){super(e,t,s),this.#i=e,this.#c=t}async peerInboxId(){return this.#i.sendMessage("dm.peerInboxId",{id:this.#c})}async getDuplicateDms(){return this.#i.sendMessage("dm.getDuplicateDms",{id:this.#c})}}class Me extends we{#h=[];#i;#p;#c;#m;#y;#I=[];#g(e){this.#y=e?.name??"",this.#m=e?.imageUrl??"",this.#p=e?.description??"",this.#h=e?.admins??[],this.#I=e?.superAdmins??[]}constructor(e,t,s){super(e,t,s),this.#i=e,this.#c=t,this.#g(s)}async sync(){const e=await super.sync();return this.#g(e),e}get name(){return this.#y}async updateName(e){await this.#i.sendMessage("group.updateName",{id:this.#c,name:e}),this.#y=e}get imageUrl(){return this.#m}async updateImageUrl(e){await this.#i.sendMessage("group.updateImageUrl",{id:this.#c,imageUrl:e}),this.#m=e}get description(){return this.#p}async updateDescription(e){await this.#i.sendMessage("group.updateDescription",{id:this.#c,description:e}),this.#p=e}get admins(){return this.#h}get superAdmins(){return this.#I}async listAdmins(){const e=await this.#i.sendMessage("group.listAdmins",{id:this.#c});return this.#h=e,e}async listSuperAdmins(){const e=await this.#i.sendMessage("group.listSuperAdmins",{id:this.#c});return this.#I=e,e}async permissions(){return this.#i.sendMessage("group.permissions",{id:this.#c})}async updatePermission(e,t,s){return this.#i.sendMessage("group.updatePermission",{id:this.#c,permissionType:e,policy:t,metadataField:s})}async isAdmin(e){return(await this.listAdmins()).includes(e)}async isSuperAdmin(e){return(await this.listSuperAdmins()).includes(e)}async addMembersByIdentifiers(e){return this.#i.sendMessage("group.addMembersByIdentifiers",{id:this.#c,identifiers:e})}async addMembers(e){return this.#i.sendMessage("group.addMembers",{id:this.#c,inboxIds:e})}async removeMembersByIdentifiers(e){return this.#i.sendMessage("group.removeMembersByIdentifiers",{id:this.#c,identifiers:e})}async removeMembers(e){return this.#i.sendMessage("group.removeMembers",{id:this.#c,inboxIds:e})}async addAdmin(e){return this.#i.sendMessage("group.addAdmin",{id:this.#c,inboxId:e})}async removeAdmin(e){return this.#i.sendMessage("group.removeAdmin",{id:this.#c,inboxId:e})}async addSuperAdmin(e){return this.#i.sendMessage("group.addSuperAdmin",{id:this.#c,inboxId:e})}async removeSuperAdmin(e){return this.#i.sendMessage("group.removeSuperAdmin",{id:this.#c,inboxId:e})}}class be{#i;constructor(e){this.#i=e}async sync(){return this.#i.sendMessage("conversations.sync",void 0)}async syncAll(e){return this.#i.sendMessage("conversations.syncAll",{consentStates:e})}async getConversationById(e){const t=await this.#i.sendMessage("conversations.getConversationById",{id:e});if(t)return"group"===t.metadata.conversationType?new Me(this.#i,t.id,t):new fe(this.#i,t.id,t)}async getMessageById(e){const t=await this.#i.sendMessage("conversations.getMessageById",{id:e});return t?new te(this.#i,t):void 0}async getDmByInboxId(e){const t=await this.#i.sendMessage("conversations.getDmByInboxId",{inboxId:e});return t?new fe(this.#i,t.id,t):void 0}async list(e){return(await this.#i.sendMessage("conversations.list",{options:e})).map(e=>{switch(e.metadata.conversationType){case"dm":return new fe(this.#i,e.id,e);case"group":return new Me(this.#i,e.id,e);default:return}}).filter(e=>void 0!==e)}async listGroups(e){return(await this.#i.sendMessage("conversations.listGroups",{options:e})).map(e=>new Me(this.#i,e.id,e))}async listDms(e){return(await this.#i.sendMessage("conversations.listDms",{options:e})).map(e=>new fe(this.#i,e.id,e))}async newGroupOptimistic(e){const t=await this.#i.sendMessage("conversations.newGroupOptimistic",{options:e});return new Me(this.#i,t.id,t)}async newGroupWithIdentifiers(e,t){const s=await this.#i.sendMessage("conversations.newGroupWithIdentifiers",{identifiers:e,options:t});return new Me(this.#i,s.id,s)}async newGroup(e,t){const s=await this.#i.sendMessage("conversations.newGroup",{inboxIds:e,options:t});return new Me(this.#i,s.id,s)}async newDmWithIdentifier(e,t){const s=await this.#i.sendMessage("conversations.newDmWithIdentifier",{identifier:e,options:t});return new fe(this.#i,s.id,s)}async newDm(e,t){const s=await this.#i.sendMessage("conversations.newDm",{inboxId:e,options:t});return new fe(this.#i,s.id,s)}async getHmacKeys(){return this.#i.sendMessage("conversations.getHmacKeys",void 0)}async stream(e){return ve(async(t,s)=>{const i=v();return await this.sync(),await this.#i.sendMessage("conversations.stream",{streamId:i,conversationType:e?.conversationType}),this.#i.handleStreamMessage(i,t,{...e,onFail:s})},e=>"group"===e.metadata.conversationType?new Me(this.#i,e.id,e):new fe(this.#i,e.id,e),e)}async streamGroups(e){return this.stream({...e,conversationType:I.Group})}async streamDms(e){return this.stream({...e,conversationType:I.Dm})}async streamAllMessages(e){return ve(async(t,s)=>{const i=v();return await this.sync(),await this.#i.sendMessage("conversations.streamAllMessages",{streamId:i,conversationType:e?.conversationType,consentStates:e?.consentStates}),this.#i.handleStreamMessage(i,t,{...e,onFail:s})},e=>new te(this.#i,e),e)}async streamAllGroupMessages(e){return this.streamAllMessages({...e,conversationType:I.Group})}async streamAllDmMessages(e){return this.streamAllMessages({...e,conversationType:I.Dm})}}class Se{#i;constructor(e){this.#i=e}apiStatistics(){return this.#i.sendMessage("debugInformation.apiStatistics",void 0)}apiIdentityStatistics(){return this.#i.sendMessage("debugInformation.apiIdentityStatistics",void 0)}apiAggregateStatistics(){return this.#i.sendMessage("debugInformation.apiAggregateStatistics",void 0)}clearAllStatistics(){return this.#i.sendMessage("debugInformation.clearAllStatistics",void 0)}uploadDebugArchive(e){return this.#i.sendMessage("debugInformation.uploadDebugArchive",{serverUrl:e})}}class xe{#i;constructor(e){this.#i=e}sync(){return this.#i.sendMessage("preferences.sync",void 0)}async inboxState(e){return this.#i.sendMessage("preferences.inboxState",{refreshFromNetwork:e??!1})}async inboxStateFromInboxIds(e,t){return this.#i.sendMessage("preferences.inboxStateFromInboxIds",{inboxIds:e,refreshFromNetwork:t??!1})}async getLatestInboxState(e){return this.#i.sendMessage("preferences.getLatestInboxState",{inboxId:e})}async setConsentStates(e){return this.#i.sendMessage("preferences.setConsentStates",{records:e})}async getConsentState(e,t){return this.#i.sendMessage("preferences.getConsentState",{entityType:e,entity:t})}async streamConsent(e){return ve(async(t,s)=>{const i=v();return await this.sync(),await this.#i.sendMessage("preferences.streamConsent",{streamId:i}),this.#i.handleStreamMessage(i,t,{...e,onFail:s})},void 0,e)}async streamPreferences(e){return ve(async(t,s)=>{const i=v();return await this.sync(),await this.#i.sendMessage("preferences.streamPreferences",{streamId:i}),this.#i.handleStreamMessage(i,t,{...e,onFail:s})},void 0,e)}}const Ae=async(e,t)=>{switch(e.type){case"EOA":return{type:"EOA",identifier:await e.getIdentifier(),signature:t};case"SCW":return{type:"SCW",identifier:await e.getIdentifier(),signature:t,chainId:e.getChainId(),blockNumber:e.getBlockNumber?.()}}},ke=e=>{console.error(e.message)};class De{#e;#t;#s=new Map;constructor(e,t){this.#e=e,this.#e.addEventListener("message",this.handleMessage),t&&this.#e.addEventListener("error",ke),this.#t=t}async init(){return this.sendMessage("utils.init",{enableLogging:this.#t})}sendMessage(e,t){const s=v();this.#e.postMessage({action:e,id:s,data:t});return new Promise((e,t)=>{this.#s.set(s,{resolve:e,reject:t})})}handleMessage=e=>{const t=e.data;this.#t&&console.log("utils received event data",t);const s=this.#s.get(t.id);s&&(this.#s.delete(t.id),"error"in t?s.reject(t.error):s.resolve(t.result))};close(){this.#e.removeEventListener("message",this.handleMessage),this.#t&&this.#e.removeEventListener("error",ke),this.#e.terminate()}}class Pe extends De{constructor(e){super(new Worker(new URL("./workers/utils",import.meta.url),{type:"module"}),e??!1)}async generateInboxId(e){return this.sendMessage("utils.generateInboxId",{identifier:e})}async getInboxIdForIdentifier(e,t){return this.sendMessage("utils.getInboxIdForIdentifier",{identifier:e,env:t})}async revokeInstallationsSignatureText(e,t,s,i){return this.sendMessage("utils.revokeInstallationsSignatureText",{env:i,identifier:e,inboxId:t,installationIds:s,signatureRequestId:v()})}async revokeInstallations(e,t,s,i){const n=await e.getIdentifier(),{signatureText:r,signatureRequestId:a}=await this.revokeInstallationsSignatureText(n,t,s,i),o=await e.signMessage(r),c=await Ae(e,o);return this.sendMessage("utils.revokeInstallations",{signer:c,signatureRequestId:a,env:i})}async inboxStateFromInboxIds(e,t){return this.sendMessage("utils.inboxStateFromInboxIds",{inboxIds:e,env:t})}}class Te extends M{#v;#w;#f;#M;#b;#S;#x;#A=!1;#k;#D;#P;constructor(t){super(new Worker(new URL("./workers/client",import.meta.url),{type:"module"}),void 0!==t?.loggingLevel&&"off"!==t.loggingLevel),this.#P=t,this.#w=new be(this),this.#f=new Se(this),this.#k=new xe(this);const s=[new e,new i,...t?.codecs??[]];this.#v=new Map(s.map(e=>[e.contentType.toString(),e]))}async init(e){const t=await this.sendMessage("client.init",{identifier:e,options:this.#P});this.#M=e,this.#b=t.inboxId,this.#S=t.installationId,this.#x=t.installationIdBytes,this.#A=!0}static async create(e,t){const s=new Te(t);return s.#D=e,await s.init(await e.getIdentifier()),t?.disableAutoRegister||await s.register(),s}static async build(e,t){const s=new Te({...t,disableAutoRegister:!0});return await s.init(e),s}get options(){return this.#P}get signer(){return this.#D}get isReady(){return this.#A}get inboxId(){return this.#b}get accountIdentifier(){return this.#M}get installationId(){return this.#S}get installationIdBytes(){return this.#x}get conversations(){return this.#w}get debugInformation(){return this.#f}get preferences(){return this.#k}async unsafe_createInboxSignatureText(){return this.sendMessage("client.createInboxSignatureText",{signatureRequestId:v()})}async unsafe_addAccountSignatureText(e,t=!1){if(!t)throw new re;return this.sendMessage("client.addAccountSignatureText",{newIdentifier:e,signatureRequestId:v()})}async unsafe_removeAccountSignatureText(e){return this.sendMessage("client.removeAccountSignatureText",{identifier:e,signatureRequestId:v()})}async unsafe_revokeAllOtherInstallationsSignatureText(){return this.sendMessage("client.revokeAllOtherInstallationsSignatureText",{signatureRequestId:v()})}async unsafe_revokeInstallationsSignatureText(e){return this.sendMessage("client.revokeInstallationsSignatureText",{installationIds:e,signatureRequestId:v()})}async unsafe_changeRecoveryIdentifierSignatureText(e){return this.sendMessage("client.changeRecoveryIdentifierSignatureText",{identifier:e,signatureRequestId:v()})}async unsafe_applySignatureRequest(e,t){return this.sendMessage("client.applySignatureRequest",{signer:e,signatureRequestId:t})}async register(){if(!this.#D)throw new ie;const{signatureText:e,signatureRequestId:t}=await this.unsafe_createInboxSignatureText();if(!e||!t)return;const s=await this.#D.signMessage(e),i=await Ae(this.#D,s);return this.sendMessage("client.registerIdentity",{signer:i,signatureRequestId:t})}async unsafe_addAccount(e,t=!1){if(!this.#D)throw new ie;if(!t)throw new re;const s=await this.findInboxIdByIdentifier(await e.getIdentifier());if(s)throw new ae(s);const{signatureText:i,signatureRequestId:n}=await this.unsafe_addAccountSignatureText(await e.getIdentifier(),!0),r=await e.signMessage(i),a=await Ae(e,r);return this.sendMessage("client.addAccount",{identifier:a.identifier,signer:a,signatureRequestId:n})}async removeAccount(e){if(!this.#D)throw new ie;const{signatureText:t,signatureRequestId:s}=await this.unsafe_removeAccountSignatureText(e),i=await this.#D.signMessage(t),n=await Ae(this.#D,i);return this.sendMessage("client.removeAccount",{identifier:e,signer:n,signatureRequestId:s})}async revokeAllOtherInstallations(){if(!this.#D)throw new ie;const{signatureText:e,signatureRequestId:t}=await this.unsafe_revokeAllOtherInstallationsSignatureText(),s=await this.#D.signMessage(e),i=await Ae(this.#D,s);return this.sendMessage("client.revokeAllOtherInstallations",{signer:i,signatureRequestId:t})}async revokeInstallations(e){if(!this.#D)throw new ie;const{signatureText:t,signatureRequestId:s}=await this.unsafe_revokeInstallationsSignatureText(e),i=await this.#D.signMessage(t),n=await Ae(this.#D,i);return this.sendMessage("client.revokeInstallations",{installationIds:e,signer:n,signatureRequestId:s})}static async revokeInstallations(e,t,s,i,n){const r=new Pe(n);await r.init(),await r.revokeInstallations(e,t,s,i),r.close()}static async inboxStateFromInboxIds(e,t,s){const i=new Pe(s);await i.init();const n=await i.inboxStateFromInboxIds(e,t);return i.close(),n}async changeRecoveryIdentifier(e){if(!this.#D)throw new ie;const{signatureText:t,signatureRequestId:s}=await this.unsafe_changeRecoveryIdentifierSignatureText(e),i=await this.#D.signMessage(t),n=await Ae(this.#D,i);return this.sendMessage("client.changeRecoveryIdentifier",{identifier:e,signer:n,signatureRequestId:s})}async isRegistered(){return this.sendMessage("client.isRegistered",void 0)}async canMessage(e){return this.sendMessage("client.canMessage",{identifiers:e})}static async canMessage(e,t){const s=new Map,i=new Pe;for(const n of e){const e=await i.getInboxIdForIdentifier(n,t);s.set(n.identifier.toLowerCase(),void 0!==e)}return i.close(),s}async findInboxIdByIdentifier(e){return this.sendMessage("client.findInboxIdByIdentifier",{identifier:e})}codecFor(e){return this.#v.get(e.toString())}encodeContent(e,t){const s=this.codecFor(t);if(!s)throw new ne(t);const i=s.encode(e,this),n=s.fallback(e);return n&&(i.fallback=n),P(i)}decodeContent(e,s){const i=this.codecFor(s);if(!i)throw new ne(s);if(s.sameAs(t)&&e.kind!==m.MembershipChange)throw new de(e.id);const n=T(e.content);return i.decode(n,this)}signWithInstallationKey(e){return this.sendMessage("client.signWithInstallationKey",{signatureText:e})}verifySignedWithInstallationKey(e,t){return this.sendMessage("client.verifySignedWithInstallationKey",{signatureText:e,signatureBytes:t})}verifySignedWithPublicKey(e,t,s){return this.sendMessage("client.verifySignedWithPublicKey",{signatureText:e,signatureBytes:t,publicKey:s})}async getKeyPackageStatusesForInstallationIds(e){return this.sendMessage("client.getKeyPackageStatusesForInstallationIds",{installationIds:e})}}const Ce={local:"http://localhost:5555",dev:"https://dev.xmtp.network",production:"https://production.xmtp.network"},Re={local:"http://localhost:5558",dev:"https://message-history.dev.ephemera.network",production:"https://message-history.production.ephemera.network"};export{ae as AccountAlreadyAssociatedError,Ce as ApiUrls,Te as Client,se as ClientNotInitializedError,ne as CodecNotFoundError,we as Conversation,be as Conversations,te as DecodedMessage,fe as Dm,Me as Group,oe as GroupNotFoundError,Re as HistorySyncUrls,re as InboxReassignError,de as InvalidGroupMembershipChangeError,le as MissingContentTypeError,ie as SignerUnavailableError,ue as StreamFailedError,ge as StreamInvalidRetryAttemptsError,ce as StreamNotFoundError,Pe as Utils,S as fromContentTypeId,D as fromEncodedContent,$ as fromSafeConsent,A as fromSafeContentTypeId,U as fromSafeCreateDmOptions,B as fromSafeCreateGroupOptions,T as fromSafeEncodedContent,V as fromSafeGroupMember,q as fromSafeListConversationsOptions,N as fromSafeListMessagesOptions,Q as fromSafeMessageDisappearingSettings,F as fromSafePermissionPolicySet,b as toContentTypeId,k as toEncodedContent,Z as toSafeApiStats,j as toSafeConsent,x as toSafeContentTypeId,O as toSafeConversation,Y as toSafeConversationDebugInfo,E as toSafeCreateDmOptions,G as toSafeCreateGroupOptions,P as toSafeEncodedContent,H as toSafeGroupMember,z as toSafeHmacKey,ee as toSafeIdentityStats,W as toSafeInboxState,K as toSafeInstallation,X as toSafeKeyPackageStatus,L as toSafeListConversationsOptions,R as toSafeListMessagesOptions,C as toSafeMessage,J as toSafeMessageDisappearingSettings,_ as toSafePermissionPolicySet,Ae as toSafeSigner};
//# sourceMappingURL=index.js.map
